
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-ykZUAdzB6m7y0UvnUpPthAxPl4htzqB
"""

!pip -q install numpy
import numpy as np
from google.colab import files

def voltage_from_percent(p):
    x = p
    # f(x) = 4.60897e-09*x^5 - 1.13065e-06*x^4 + 9.13377e-05*x^3 - 0.00277445*x^2 + 0.0639597*x + 0.154238
    return (((((4.60897e-09*x - 1.13065e-06)*x + 9.13377e-05)*x
              - 0.00277445)*x + 0.0639597)*x + 0.154238)

# --- Parámetros LUT ---
MV_FS = 3300           # índice 0..3300 mV
USE_UINT8 = True       # True: % entero (0..100); False: uint16 con x10 (0..1000)

 mV/1000 ---
def percent_from_mV(mv):
    target = mv / 1000.0
    # Rango físico de tu poli (aprox): V(0)~0.154V, V(100)~3.168V
    v0 = voltage_from_percent(0.0)
    v1 = voltage_from_percent(100.0)
    if target <= v0:  return 0.0
    if target >= v1:  return 100.0
    lo, hi = 0.0, 100.0
    for _ in range(40):  # precisión alta
        mid = 0.5*(lo+hi)
        vm  = voltage_from_percent(mid)
        if vm < target: lo = mid
        else:           hi = mid
    return 0.5*(lo+hi)

percent = np.array([percent_from_mV(mv) for mv in range(MV_FS+1)])

if USE_UINT8:
    lut_vals = np.rint(np.clip(percent, 0, 100)).astype(np.uint8)  # 0..100
    c_type   = "uint8_t"; LUT_SCALE = 1
else:
    lut_vals = np.rint(np.clip(percent*10.0, 0, 1000)).astype(np.uint16)  # 0..1000
    c_type   = "uint16_t"; LUT_SCALE = 10

lines = []
lines.append("#ifndef LOOKUPTABLE_H")
lines.append("#define LOOKUPTABLE_H")
lines.append("")
lines.append("#include <stdint.h>")
lines.append(f"#define LUT_SIZE {MV_FS+1}")
lines.append(f"#define LUT_SCALE {LUT_SCALE}   // 1:% entero; 10: décimas de %")
lines.append("#define LUT_INDEX_IS_MV 1      // índice = mV (0..3300)")
lines.append("")
lines.append(f"static const {c_type} lookup_table[LUT_SIZE] = {{")

row=[]
for i,v in enumerate(lut_vals):
    row.append(str(int(v)))
    if (i+1)%16==0:
        lines.append("  " + ", ".join(row) + ",")
        row=[]
if row:
    lines.append("  " + ", ".join(row) + ",")

lines.append("};")
lines.append("")
lines.append("#endif // LOOKUPTABLE_H")

with open("lookuptable.h","w") as f:
    f.write("\n".join(lines))

files.download("lookuptable.h")
print("Generado lookuptable.h (mV -> %) ✅")